import{_ as o,c as e,o as t,a as r}from"./app.bd02baaa.js";const a='{"title":"VCCWでのWordMoveの概要と設定方法と使い方","description":"","frontmatter":{"title":"VCCWでのWordMoveの概要と設定方法と使い方","date":"2017-03-04T00:00:00.000Z","author":"Kuriya Ushiki","gravatar":"f9b54adf132891f72902df888d263f47","category":"backend","tags":["vccw","wordmove","wordpress"]},"headers":[{"level":2,"title":"WordMoveとは","slug":"wordmoveとは"},{"level":2,"title":"WordMoveのメリット","slug":"wordmoveのメリット"},{"level":2,"title":"使い方","slug":"使い方"}],"relativePath":"posts/20170304.md","lastUpdated":1645005940550}',n={},s=[r('<p>VCCWはvagrantでWordPressの環境を簡単に構築するためのものなのですが、VCCWにはWordMoveという便利ツールが入っています。</p><hr><p>VCCWはvagrantでWordPressの環境を簡単に構築するためのものなのですが、VCCWにはWordMoveという便利ツールが入っています。</p><h2 id="wordmoveとは" tabindex="-1">WordMoveとは <a class="header-anchor" href="#wordmoveとは" aria-hidden="true">#</a></h2><p>WordMoveはコマンド１つでWorｄPressがある開発環境と本番環境を同期してくれるツールです。 指定のディレクトリでコマンドを実行するとテーマだけでなく<strong>プラグイン</strong>や<strong>DB</strong>や<strong>メディア</strong>なども全てデプロイされます。</p><h2 id="wordmoveのメリット" tabindex="-1">WordMoveのメリット <a class="header-anchor" href="#wordmoveのメリット" aria-hidden="true">#</a></h2><p>WordPressで開発環境を作っても本番環境で記事などを更新すると開発環境と本番環境でズレが生じてきてします。 そのズレを直すために毎回管理画面で設定を変更したり、記事を更新したりするのはとてもめんどくさい。 そのズレをコマンド一発で同期されるのでWordMoveはすごい便利です。</p><p>またこまめに開発環境と本番環境で同期を取ることでバックアップにもなります。 私は記事を書く際も開発環境で書いてそれを本番に同期させるようにしています。</p><p>以前にサーバーのお金を払い忘れて今まで書いていた記事やソースが全て消えたてショックだったので、バックアップはローカルで取りたいと思い、模索した結果WrodMoveに行き着きました。</p><h2 id="使い方" tabindex="-1">使い方 <a class="header-anchor" href="#使い方" aria-hidden="true">#</a></h2><h4 id="vccwで開発環境を構築する" tabindex="-1">VCCWで開発環境を構築する <a class="header-anchor" href="#vccwで開発環境を構築する" aria-hidden="true">#</a></h4><p>別の記事にVCCWでのWrodPressの開発環境の構築方法を記載します。 coming soon</p><h4 id="mordmoveの設定" tabindex="-1">MordMoveの設定 <a class="header-anchor" href="#mordmoveの設定" aria-hidden="true">#</a></h4><p>MordMoveの設定には開発環境と本番環境のSSHの情報とDBの情報が必要となる。 開発環境の情報はVCCWで構築していればplaybookに全て書いてある。 本番環境の情報はレンタルサーバーであればそこの管理画面などから探す必要がある。</p><p>まず<strong>Movefile</strong>を編集する 変更が必要な箇所についてはコメントを残しておいたので参照してください。</p><div class="language-"><pre><code>local:\n  vhost: &quot;http://example.dev&quot; #本番環境のドメイン\n  wordpress_path: &quot;/var/www/html&quot; # 開発環境でのWordPressが入っているディレクトリのフルパス #VCCWでplaybookを変更していなければデフォルトのままでOK\n  database:\n    name: &quot;dbname&quot; #開発環境のDBのデータベース名\n    user: &quot;dbuser&quot; #開発環境のDBのユーザー名\n    password: &quot;dbpassward&quot; #開発環境のDBのユーザー名のパスワード\n    host: &quot;localhost&quot;\n    charset: &quot;utf8&quot;\n\n  # paths: # you can customize wordpress internal paths\n  #   wp_content: &quot;wp-content&quot;\n  #   uploads: &quot;wp-content/uploads&quot;\n  #   plugins: &quot;wp-content/plugins&quot;\n  #   mu_plugins: &quot;wp-content/mu-plugins&quot;\n  #   themes: &quot;wp-content/themes&quot;\n  #   languages: &quot;wp-content/languages&quot;\n\nproduction:\n  vhost: &quot;http://example.com&quot; #本番環境のドメイン\n  wordpress_path: &quot;/home/users/3/username/web/protagram&quot; #本番環境のWordPressが入っているディレクトリのフルパス\n\n  database:\n    name: &quot;dbname&quot; #本番環境のDBのデータベース名\n    user: &quot;dbuser&quot; #本番環境のDBのユーザー名\n    password: &quot;dbpassward&quot; #本番環境のDBのユーザー名のパスワード\n    host: &quot;host&quot; #本番環境のDBのホスト\n    #port: &quot;3308&quot; # デフォルトでこの記述があったでそのままにしていたら接続できなかったので削除するかコメントアウトする必要がある\n    mysqldump_options: &quot;--max_allowed_packet=50MB&quot; # Only available if using SSH\n\n  exclude:\n    - &quot;.git/&quot;\n    - &quot;.gitignore&quot;\n    - &quot;.sass-cache/&quot;\n    - &quot;bin/&quot;\n    - &quot;tmp/*&quot;\n    - &quot;Gemfile*&quot;\n    - &quot;Movefile&quot;\n    - &quot;wp-config.php&quot;\n    - &quot;wp-content/*.sql&quot;\n    - &quot;.htaccess&quot; #追記した\n\n  ssh:\n    host: &quot;2222.22222.jp&quot; #本番環境のSSHのhost\n    user: &quot;2222user&quot; #本番環境のSSHのuser名\n    password: &quot;password&quot; #デフォルトではこの項目は無かったが追記しておいた。\n    port: &quot;2222&quot; #本番環境のSSHのport\n    rsync_options: --verbose\n\n</code></pre></div><p><a href="https://lolipop.jp/" target="_blank" rel="noopener noreferrer">ロリポップ</a>の場合は以下のサイトがとてもわかり易く設定方法を書いてくれていた。 <a href="http://wpwand.com/migrate-between-remote-to-local/" target="_blank" rel="noopener noreferrer">WordmoveでリモートWordPressサイトをローカル環境に転送する</a></p><p>さくらサーバーの場合は以下のサイトがとてもわかり易く設定方法を書いてくれていた。 <a href="https://www.d-wood.com/blog/2016/02/26_7816.html" target="_blank" rel="noopener noreferrer">[WordPress] VCCW + WordMove でローカルの WordPress をサーバと同期する</a></p><h4 id="wrodmoveでデプロイする方法" tabindex="-1">WrodMoveでデプロイする方法 <a class="header-anchor" href="#wrodmoveでデプロイする方法" aria-hidden="true">#</a></h4><p>開発環境のsshに入る</p><div class="language-"><pre><code>vagrant ssh\n</code></pre></div><p>vagrantディレクトリに移動する</p><div class="language-"><pre><code>cd /vagrant\n</code></pre></div><p>開発環境を本番環境に同期する場合</p><div class="language-"><pre><code>wordmove push --all\n</code></pre></div><p>本番環境を開発環境に同期する場合</p><div class="language-"><pre><code>wordmove pull --all\n</code></pre></div>',27)];var d=o(n,[["render",function(o,r,a,n,d,u){return t(),e("div",null,s)}]]);export{a as __pageData,d as default};
